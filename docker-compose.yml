version: '3'

networks:
  dev-network:
    driver: bridge

services:
# Back
  # mongo server
  mongo:
    container_name: py_mongoserver
    hostname: mongo
    ports:
     - "27017:27017"
    image: "mongo:3.4"
    restart: always
    command: mongod
    volumes: 
     - './data/mongo:/data/db'
    env_file:
      - ./conf/conf.env
    networks:
      - "dev-network"
  
  # worker 
  worker:
    container_name: py_worker
    hostname: worker
    restart: always
    ports:
     - "5003:5003"
    build: ./worker/
    # depends_on:
    #   - mongo
    volumes:
     - './worker:/opt/pytheas_worker'
     - './conf:/opt/pytheas_worker/conf'
     - './logs:/opt/pytheas_worker/logs'
    env_file:
      - ./conf/conf.env
    networks:
      - "dev-network"

  # restapp
  restapp:
    container_name: py_restapp
    hostname: restapp
    ports:
     - "5053:5053"
    build: ./restapp/
    restart: always
    # depends_on:
    #   - mongo
    volumes:
      - './restapp:/opt/pytheas_rest'
      - './conf:/opt/pytheas_rest/conf'
      - './logs:/opt/pytheas_rest/logs'
    env_file:
      - ./conf/conf.env
    networks:
      - "dev-network"
    # links:
    #   - mongo
    #   - worker


# # Front
#   # mongo client
#   mongoclient:
#     container_name: py_mongoclient
#     ports:
#      - "3000:3000"
#     image: "mongoclient/mongoclient"
#     restart: always
#     depends_on:
#       - mongo
#       networks:
#       - "dev-network"

    
  # wepapp
  webapp:
    container_name: py_webapp
    hostname: webapp
    ports:
     - "8080:8080"
    build: ./webapp/
    restart: always
    # depends_on:
    #  - restapp
    volumes:
     - './webapp/:/opt/pytheas_webapp'
     - './data:/opt/pytheas_webapp/data'
     - './logs:/opt/pytheas_webapp/logs'
     - './conf:/opt/pytheas_webapp/conf'
    env_file:
      - ./conf/conf.env
    networks:
      - "dev-network"
